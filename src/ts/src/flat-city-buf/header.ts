// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Column } from '../flat-city-buf/column.js';
import { GeographicalExtent } from '../flat-city-buf/geographical-extent.js';
import { ReferenceSystem } from '../flat-city-buf/reference-system.js';
import { Transform } from '../flat-city-buf/transform.js';


export class Header {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Header {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsHeader(bb:flatbuffers.ByteBuffer, obj?:Header):Header {
  return (obj || new Header()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsHeader(bb:flatbuffers.ByteBuffer, obj?:Header):Header {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Header()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

transform(obj?:Transform):Transform|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Transform()).__init(this.bb_pos + offset, this.bb!) : null;
}

columns(index: number, obj?:Column):Column|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Column()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

columnsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

featuresCount():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

geographicalExtent(obj?:GeographicalExtent):GeographicalExtent|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new GeographicalExtent()).__init(this.bb_pos + offset, this.bb!) : null;
}

referenceSystem(obj?:ReferenceSystem):ReferenceSystem|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new ReferenceSystem()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

identifier():string|null
identifier(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
identifier(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

referenceDate():string|null
referenceDate(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
referenceDate(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

title():string|null
title(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
title(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pocContactName():string|null
pocContactName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pocContactName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pocContactType():string|null
pocContactType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pocContactType(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pocRole():string|null
pocRole(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pocRole(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pocPhone():string|null
pocPhone(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pocPhone(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pocEmail():string|null
pocEmail(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pocEmail(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pocWebsite():string|null
pocWebsite(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pocWebsite(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pocAddressThoroughfareNumber():string|null
pocAddressThoroughfareNumber(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pocAddressThoroughfareNumber(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pocAddressThoroughfareName():string|null
pocAddressThoroughfareName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pocAddressThoroughfareName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pocAddressLocality():string|null
pocAddressLocality(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pocAddressLocality(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pocAddressPostcode():string|null
pocAddressPostcode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pocAddressPostcode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

pocAddressCountry():string|null
pocAddressCountry(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
pocAddressCountry(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

attributes(index: number):number|null {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
}

attributesLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

attributesArray():Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
}

static startHeader(builder:flatbuffers.Builder) {
  builder.startObject(20);
}

static addTransform(builder:flatbuffers.Builder, transformOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, transformOffset, 0);
}

static addColumns(builder:flatbuffers.Builder, columnsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, columnsOffset, 0);
}

static createColumnsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startColumnsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addFeaturesCount(builder:flatbuffers.Builder, featuresCount:bigint) {
  builder.addFieldInt64(2, featuresCount, BigInt('0'));
}

static addGeographicalExtent(builder:flatbuffers.Builder, geographicalExtentOffset:flatbuffers.Offset) {
  builder.addFieldStruct(3, geographicalExtentOffset, 0);
}

static addReferenceSystem(builder:flatbuffers.Builder, referenceSystemOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, referenceSystemOffset, 0);
}

static addIdentifier(builder:flatbuffers.Builder, identifierOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, identifierOffset, 0);
}

static addReferenceDate(builder:flatbuffers.Builder, referenceDateOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, referenceDateOffset, 0);
}

static addTitle(builder:flatbuffers.Builder, titleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, titleOffset, 0);
}

static addPocContactName(builder:flatbuffers.Builder, pocContactNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, pocContactNameOffset, 0);
}

static addPocContactType(builder:flatbuffers.Builder, pocContactTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, pocContactTypeOffset, 0);
}

static addPocRole(builder:flatbuffers.Builder, pocRoleOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, pocRoleOffset, 0);
}

static addPocPhone(builder:flatbuffers.Builder, pocPhoneOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, pocPhoneOffset, 0);
}

static addPocEmail(builder:flatbuffers.Builder, pocEmailOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, pocEmailOffset, 0);
}

static addPocWebsite(builder:flatbuffers.Builder, pocWebsiteOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, pocWebsiteOffset, 0);
}

static addPocAddressThoroughfareNumber(builder:flatbuffers.Builder, pocAddressThoroughfareNumberOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, pocAddressThoroughfareNumberOffset, 0);
}

static addPocAddressThoroughfareName(builder:flatbuffers.Builder, pocAddressThoroughfareNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, pocAddressThoroughfareNameOffset, 0);
}

static addPocAddressLocality(builder:flatbuffers.Builder, pocAddressLocalityOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, pocAddressLocalityOffset, 0);
}

static addPocAddressPostcode(builder:flatbuffers.Builder, pocAddressPostcodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(17, pocAddressPostcodeOffset, 0);
}

static addPocAddressCountry(builder:flatbuffers.Builder, pocAddressCountryOffset:flatbuffers.Offset) {
  builder.addFieldOffset(18, pocAddressCountryOffset, 0);
}

static addAttributes(builder:flatbuffers.Builder, attributesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(19, attributesOffset, 0);
}

static createAttributesVector(builder:flatbuffers.Builder, data:number[]|Uint8Array):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]!);
  }
  return builder.endVector();
}

static startAttributesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
}

static endHeader(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishHeaderBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedHeaderBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

}
